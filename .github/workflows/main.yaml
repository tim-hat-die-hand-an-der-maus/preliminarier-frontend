name: Main
on:
  push:
    branches: [main]
  pull_request: {}

jobs:
  required-meta:
    permissions:
      contents: write
      checks: write
    uses: BlindfoldedSurgery/actions-meta/.github/workflows/required.yml@v1

  check-format:
    name: Check Format
    runs-on: ubuntu-24.04
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - uses: jdx/mise-action@v2
      - name: Check lib formatting
        run: dart format lib --set-exit-if-changed --output=none

  lint:
    name: Lint
    runs-on: ubuntu-24.04
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - uses: jdx/mise-action@v2
      - name: Get dependencies
        run: flutter pub get
      - name: Code generation
        run: dart run build_runner build
      - name: Run Analysis
        run: flutter analyze --fatal-infos

  build:
    name: Build Web Package
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/blindfoldedsurgery/flutter:2.2.0-3.27
      options: --user 0
    needs: [check-format, lint]
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Get dependencies
        run: flutter pub get
      - name: Code generation
        run: dart run build_runner build
      - name: Build web package
        run: flutter build web
      - name: Store build result
        uses: actions/upload-artifact@v4
        with:
          name: web-app
          path: build/web

  deploy:
    runs-on: ubuntu-24.04
    if: github.ref_name == github.event.repository.default_branch
    needs: build
    concurrency: production
    container: rclone/rclone:1.69
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: web-app
      - name: Save rclone config
        env:
          CONFIG: |
            [r2]
            type = s3
            provider = Cloudflare
            access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}
            secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            endpoint = ${{ secrets.S3_ENDPOINT }}
        run: |
          mkdir -p /config/rclone
          echo "$CONFIG" > /config/rclone/rclone.conf
      - name: Copy web package to bucket
        run: rclone sync "$PWD" r2:${{ secrets.S3_BUCKET_NAME }}/
